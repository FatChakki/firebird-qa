#coding:utf-8

"""
ID:          table.alter-02
TITLE:       ALTER TABLE. Add column with DEFAULT expression, NOT NULL requirement and UNIQUE constraint that must be applied to its values.
DESCRIPTION:
FBTEST:      functional.table.alter.02
NOTES:
    [12.07.2025] pzotov
    Removed 'SHOW' command.
    Statement 'ALTER TABLE...' followed by commit must allow appropriate actions.
    Added 'SQL_SCHEMA_PREFIX' and variable to be substituted in expected_* on FB 6.x
    Checked on 6.0.0.949; 5.0.3.1668; 4.0.6.3214; 3.0.13.33813.
"""

import pytest
from firebird.qa import *

db = db_factory()

test_script = """
    set list on;
    set count on;
    create table test(id int generated by default as identity primary key using index test_pk);
    commit;
    alter table test add pid int default current_connection not null constraint test_unq unique;
    commit; -- Count of read-write columns does not equal count of values
    insert into test default values; -- must pass
    insert into test(id, pid) values(-1, null); -- must fail because PID must be not null
    insert into test(id) values(-1); -- must fail because PID will be duplicated
    select distinct id, sign(pid) from test;-- mustshow one record
"""

substitutions = [('[ \t]+', ' '), ('(-)?Problematic key value is.*', 'Problematic key value is')]
act = isql_act('db', test_script, substitutions = substitutions)

@pytest.mark.version('>=3')
def test_1(act: Action):

    SQL_SCHEMA_PREFIX = '' if act.is_version('<6') else '"PUBLIC".'
    TEST_TABLE_NAME = '"TEST"' if act.is_version('<6') else f'{SQL_SCHEMA_PREFIX}"TEST"'
    expected_stdout = f"""
        Records affected: 1

        Statement failed, SQLSTATE = 23000
        validation error for column {TEST_TABLE_NAME}."PID", value "*** null ***"
        Records affected: 0

        Statement failed, SQLSTATE = 23000
        violation of PRIMARY or UNIQUE KEY constraint "TEST_UNQ" on table {TEST_TABLE_NAME}
        -Problematic key value is ("PID" = 11)
        Records affected: 0

        ID                              1
        SIGN                            1
        Records affected: 1
    """
    act.expected_stdout = expected_stdout
    act.execute(combine_output = True)
    assert act.clean_stdout == act.clean_expected_stdout
